import numpy as np

#the computations done in this page is by using the reference seen the page:
#https://groups.google.com/a/rethinkrobotics.com/d/msg/brr-users/5X1-6w-Ja1I/gM85enjgQsAJ


#For those interested here are the DH parameters in standard form and the dynamic parameters of Baxter in the DH standard frame.
#DH parameters
#         theta           d        a          alpha
# Ll_1 = [    q1        0.27035    0.069       -pi/2] 
# Ll_2 = [q2 + pi/2       0              0      pi/2]       
# Ll_3 = [    q3        0.36435    0.0690      -pi/2] 
# Ll_4 = [    q4             0              0   pi/2]           
# Ll_5 = [    q5        0.37429    0.010       -pi/2]  
# Ll_6 = [    q6            0               0   pi/2]          
# Ll_7 = [    q7       0.229525       0         0  ]

#Dynamic Parameters
#These parameters lump the hand with the wrist 

#Mass
m_1 = 5.700440
m_2 = 3.226980
m_3 = 4.312720
m_4 = 2.072060
m_5 = 2.246650
m_6 = 1.609790
m_7 = 0.350930 + 0.191250

#Center of Gravity
r_1 = [ -0.0511700000000000,     0.0790800000000000,      0.000859999999999956]
r_2 = [  0.00269000000000000,   -0.00529000000000003,     0.0684499999999999]
r_3 = [ -0.0717600000000000,     0.0814900000000001,      0.00131999999999994]
r_4 = [  0.00159000000000006,   -0.0111700000000000,      0.0261799999999999]
r_5 = [ -0.0116799999999999,     0.131110000000000,       0.00459999999999992]
r_6 = [  0.00697000000000011,    0.00599999999999981,     0.0604800000000000]
r_7 = [  0.00513704655280540,    0.000957223615773138,   -0.0668234671142425]


#inertias
#          Ixx                Ixy                 Ixz             Iyy                Iyz               Izz
I1 = [0.04709102262,	 -0.00614870039,     0.00012787556,	  0.0359598847,	   -0.00078086899,	  0.03766976455]
I2 = [0.0278859752,	     -0.00018821993,    -0.000300963979,  0.0207874929,	    0.00207675762,    0.01175209419]
I3 = [0.02661733557,	 -0.00392189887,     0.00029270634,	  0.0124800832,	   -0.0010838933,	  0.02844355207]
I4 = [0.01318227876,	 -0.00019663418,     0.00036036173,	  0.0092685206,	    0.0007459496,	  0.00711582686]
I5 = [0.01667742825,	 -0.00018657629,     0.00018403705,	  0.0037463115,	    0.00064732352,	  0.01675457264]
I6 = [0.00700537914,	  0.00015348067,    -0.00044384784,	  0.0055275524,	   -0.00021115038,	  0.00387607152]
I7 = [0.00081621358,	  0.00012844010,     0.000189698911,  0.00087350127,    0.00010577265,	  0.00054941487]


def get_inertia_tensor(I):

    return np.array([[I[0],  I[1],  I[2]],
                     [I[1],  I[3],  I[4]],
                     [I[2],  I[4],  I[5]]])



def get_mass_matrix():

    mass_matrix = np.zeros((7,7))

    I = [I1,I2,I3,I4,I5,I6,I7]

    for i in range(7):

        print np.linalg.det(get_inertia_tensor(I[i]))



if __name__ == '__main__':
    get_mass_matrix()